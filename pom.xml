<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.exemple</groupId>
    <artifactId>exercices_qualite_code</artifactId>
    <version>1.0</version>
    <name>exercices_qualite_code</name>
    <description>Exercices sur la qualite du code</description>

    <properties>
        <project.slides.directory>${project.build.directory}/generated-slides</project.slides.directory>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <asciidoctor.maven.plugin.version>1.5.6</asciidoctor.maven.plugin.version>
        <asciidoctorj.pdf.version>1.5.0-alpha.16</asciidoctorj.pdf.version>
        <asciidoctorj.version>1.5.6</asciidoctorj.version>
        <asciidoctorj.diagram.version>1.5.4.1</asciidoctorj.diagram.version>
        <jruby.version>9.1.8.0</jruby.version>
        <rubygems.prawn.version>2.1.0</rubygems.prawn.version>
        <revealjs.version>3.4.1</revealjs.version>
        <asciidoctor-revealjs.version>master</asciidoctor-revealjs.version>
    </properties>

    <repositories>
        <repository>
            <id>rubygems-proxy-releases</id>
            <name>RubyGems.org Proxy (Releases)</name>
            <url>http://rubygems-proxy.torquebox.org/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <dependencies>
        <dependency>
            <groupId>rubygems</groupId>
            <artifactId>prawn</artifactId>
            <version>${rubygems.prawn.version}</version>
            <type>gem</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>

            <!-- rename index.pdf to project_name.pdf -->
            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>rename-file</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>rename</goal>
                        </goals>
                        <configuration>
                            <!--https://stackoverflow.com/questions/9849868/getting-name-of-last-folder-from-maven-project-basedir -->
                            <sourceFile>${project.build.directory}/pdf/index.pdf</sourceFile>
                            <destinationFile>${project.build.directory}/pdf/${project.file.parentFile.name}.pdf</destinationFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- added the resources plugin to copy images before adoc transform starts. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>

                <!-- for exclude files when copy  -->
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-filtering</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-docs/images</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/docs/asciidoc/images</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources-assets</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-docs/assets</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/docs/assets</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- copy resources for ghpages/docs -->
                    <execution>
                        <id>copy-resources-ghpages</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>docs</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-docs</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>.asciidoctor/**</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/pdf</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>.images/**</exclude>
                                        <exclude>index.pdf</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>de.saumya.mojo</groupId>
                <artifactId>gem-maven-plugin</artifactId>
                <version>1.0.10</version>
                <configuration>
                    <!-- align JRuby version with AsciidoctorJ to avoid redundant downloading -->
                    <jrubyVersion>${jruby.version}</jrubyVersion>
                    <gemHome>${project.build.directory}/gems</gemHome>
                    <gemPath>${project.build.directory}/gems</gemPath>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>initialize</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>
                <dependencies>
                    <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                    <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                    <!-- Dépendance AsciidoctorJ pour utiliser plantuml -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-diagram</artifactId>
                        <version>${asciidoctorj.diagram.version}</version>
                    </dependency>
                    <!-- Dépendance AsciidoctorJ pour générer un document PDF -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj.pdf.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                    <requires>
                        <require>asciidoctor-diagram</require>
                    </requires>
                    <!-- The gem-maven-plugin appends the scope (e.g., provided) to the gemPath defined in the plugin configuration -->
                    <gemPath>${project.build.directory}/gems-provided</gemPath>
                    <!-- Attributes common to all output formats -->
                    <attributes>
                        <sourcedir>${project.build.sourceDirectory}</sourcedir>
                    </attributes>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-pdf-x</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>pdf</backend>
                            <outputDirectory>${project.build.directory}/pdf</outputDirectory>
                            <sourceHighlighter>rouge</sourceHighlighter>
                            <doctype>article</doctype>
                            <attributes>
                                <imagesdir>${project.build.directory}/generated-docs/images</imagesdir>
                                <pdf-stylesdir>${project.basedir}/src/theme</pdf-stylesdir>
                                <pdf-style>x</pdf-style>
                                <icons>font</icons>
                                <pagenums/>
                                <toc>macro</toc>
                                <idprefix/>
                                <idseparator>-</idseparator>
                            </attributes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-html-x</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html5</backend>
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <!--
                            Scenarios for linking vs embedding assets:

                            Link to both stylesheets and images::

                              - don't set embedAssets option
                              - set linkcss attribute to true
                              - set imagesdir attribute to path relative to AsciiDoc source file

                              <attributes>
                                  <linkcss>true</linkcss>
                                  <imagesdir>./images</imagesdir>
                              </attributes>

                            Embed stylesheets and images::

                              - set embedAssets option to true
                              - don't set linkcss attribute
                              - set imagesdir attribute to path relative to project root

                              <embedAssets>true</embedAssets>
                              <attributes>
                                  <imagesdir>src/docs/asciidoc/images</imagesdir>
                              </attributes>

                            Link to stylesheets but embed images::

                              - set embedAssets option to true
                              - set linkcss attribute to true
                              - set imagesdir attribute to path relative to project root

                              <embedAssets>true</embedAssets>
                              <attributes>
                                  <linkcss>true</linkcss>
                                  <imagesdir>src/docs/asciidoc/images</imagesdir>
                              </attributes>

                            Embed stylesheets but link images (default)::

                              - don't set embedAssets option
                              - don't set linkcss attribute
                              - set imagesdir attribute to path relative to AsciiDoc source file

                              <attributes>
                                  <imagesdir>./images</imagesdir>
                              </attributes>

                            IMPORTANT: When you enable image embedding, you must qualify the path the the imagesdir, as shown above.
                            -->


                            <attributes>
                                <linkcss>true</linkcss>
                                <imagesdir>images</imagesdir>
                                <toc>left</toc>
                                <icons>font</icons>
                                <sectanchors>true</sectanchors>
                                <!-- set the idprefix to blank -->
                                <idprefix/>
                                <idseparator>-</idseparator>
                                <docinfo1>true</docinfo1>
                            </attributes>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
        </plugins>
    </build>
</project>
